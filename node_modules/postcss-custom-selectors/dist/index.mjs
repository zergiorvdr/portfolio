import e from"postcss-selector-parser";import s from"fs";import t from"path";import n from"postcss";var o=s=>{let t;return e((e=>{t=e})).processSync(s),t},c=(e,s)=>{const t={};return e.nodes.slice().forEach((e=>{if(i(e)){const[,n,c]=e.params.match(a);t[n]=o(c),Object(s).preserve||e.remove()}})),t};const r=/^custom-selector$/i,a=/^(:--[A-z][\w-]*)\s+([\W\w]+)\s*$/,i=e=>"atrule"===e.type&&r.test(e.name)&&a.test(e.params);function u(e,s){let t=e.nodes.length-1;for(;t>=0;){const n=l(e.nodes[t],s);n.length&&e.nodes.splice(t,1,...n),--t}return e}function l(e,s){const t=[];for(const n in e.nodes){const{value:o,nodes:c}=e.nodes[n];if(o in s){for(const c of s[o].nodes){const o=e.clone(),r=c.clone().nodes;o.nodes.splice(n,1,...r.map(((s,t)=>("selector"===s.type&&(s.spaces={...e.nodes[t].spaces}),0===t&&s.spaces&&(s.spaces.before=""),t===r.length-1&&s.spaces&&(s.spaces.after=""),s))));const a=l(o,s);j(o.nodes,Number(n)),a.length?t.push(...a):t.push(o)}return t}c&&c.length&&u(e.nodes[n],s)}return t}const p=/^(tag|universal)$/,f=/^(class|id|pseudo|tag|universal)$/,m=e=>f.test(Object(e).type),j=(e,s)=>{if(s&&(t=e[s],p.test(Object(t).type))&&m(e[s-1])){let t=s-1;for(;t&&m(e[t]);)--t;if(t<s){const n=e.splice(s,1)[0];e.splice(t,0,n),e[t].spaces.before=e[t+1].spaces.before,e[t+1].spaces.before="",e[s]&&(e[s].spaces.after=e[t].spaces.after,e[t].spaces.after="")}}var t};const w=/:--[A-z][\w-]*/;function b(e){return c(e)}function O(e){const s=Object.assign({},Object(e).customSelectors||Object(e)["custom-selectors"]);for(const e in s)s[e]=o(s[e]);return s}function y(e){return e.map((e=>{if(e instanceof Promise)return e;if(e instanceof Function)return e();const s=e===Object(e)?e:{from:String(e)};if(Object(s).customSelectors||Object(s)["custom-selectors"])return s;const n=String(s.from||"");return{type:(s.type||t.extname(n).slice(1)).toLowerCase(),from:n}})).reduce((async(e,s)=>{const o=await e,{type:c,from:r}=await s;return"ast"===c?Object.assign(o,b(r)):"css"===c?Object.assign(o,await async function(e){const s=await g(t.resolve(e));return b(n.parse(s,{from:t.resolve(e)}))}(r)):"js"===c?Object.assign(o,await async function(e){return O(await import(t.resolve(e)))}(r)):"json"===c?Object.assign(o,await async function(e){return O(await d(t.resolve(e)))}(r)):Object.assign(o,O(await s))}),Promise.resolve({}))}const g=e=>new Promise(((t,n)=>{s.readFile(e,"utf8",((e,s)=>{e?n(e):t(s)}))})),d=async e=>JSON.parse(await g(e));function S(e,s){return Promise.all(s.map((async s=>{if(s instanceof Function)await s(v(e));else{const n=s===Object(s)?s:{to:String(s)},o=n.toJSON||v;if("customSelectors"in n)n.customSelectors=o(e);else if("custom-selectors"in n)n["custom-selectors"]=o(e);else{const s=String(n.to||""),c=(n.type||t.extname(n.to).slice(1)).toLowerCase(),r=o(e);"css"===c&&await async function(e,s){const t=`${Object.keys(s).reduce(((e,t)=>(e.push(`@custom-selector ${t} ${s[t]};`),e)),[]).join("\n")}\n`;await $(e,t)}(s,r),"js"===c&&await async function(e,s){const t=`module.exports = {\n\tcustomSelectors: {\n${Object.keys(s).reduce(((e,t)=>(e.push(`\t\t'${h(t)}': '${h(s[t])}'`),e)),[]).join(",\n")}\n\t}\n};\n`;await $(e,t)}(s,r),"json"===c&&await async function(e,s){const t=`${JSON.stringify({"custom-selectors":s},null,"\t")}\n`;await $(e,t)}(s,r),"mjs"===c&&await async function(e,s){const t=`export const customSelectors = {\n${Object.keys(s).reduce(((e,t)=>(e.push(`\t'${h(t)}': '${h(s[t])}'`),e)),[]).join(",\n")}\n};\n`;await $(e,t)}(s,r)}}})))}const v=e=>Object.keys(e).reduce(((s,t)=>(s[t]=String(e[t]),s)),{}),$=(e,t)=>new Promise(((n,o)=>{s.writeFile(e,t,(e=>{e?o(e):n()}))})),h=e=>e.replace(/\\([\s\S])|(')/g,"\\$1$2").replace(/\n/g,"\\n").replace(/\r/g,"\\r"),x=s=>{const t=Boolean(Object(s).preserve),n=[].concat(Object(s).importFrom||[]),o=[].concat(Object(s).exportTo||[]),r=y(n);return{postcssPlugin:"postcss-custom-selectors",async Once(s){const n=Object.assign({},await r,c(s,{preserve:t}));await S(n,o),((s,t,n)=>{s.walkRules(w,(s=>{const o=e((e=>{u(e,t)})).processSync(s.selector);n.preserve?s.cloneBefore({selector:o}):s.selector=o}))})(s,n,{preserve:t})}}};x.postcss=!0;export{x as default};
